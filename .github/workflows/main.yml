name: Node.js 20 with GLEW, GLM, and SDL2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # Install dependencies for Linux
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libglew-dev libglm-dev libsdl2-dev

    # Install dependencies for Windows
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        # Create a temporary directory for the dependencies
        $tempDir = New-Item -ItemType Directory -Name "dependencies" -Force
        Set-Location $tempDir
    
        # Install GLEW
        Invoke-WebRequest -Uri "https://sourceforge.net/projects/glew/files/glew/2.2.0/glew-2.2.0-win32.zip/download" -OutFile "glew.zip"
        Expand-Archive -Path "glew.zip" -DestinationPath "."
        Copy-Item -Path "glew-2.2.0\bin\Release\x64\glew32.dll" -Destination "$env:GITHUB_WORKSPACE"
        Copy-Item -Path "glew-2.2.0\include\GL" -Destination "$env:GITHUB_WORKSPACE\include" -Recurse
    
        # Install GLM
        Invoke-WebRequest -Uri "https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip" -OutFile "glm.zip"
        Expand-Archive -Path "glm.zip" -DestinationPath "."
        Copy-Item -Path "glm-0.9.9.8\glm" -Destination "$env:GITHUB_WORKSPACE\include" -Recurse
    
        # Install SDL2
        Invoke-WebRequest -Uri "https://www.libsdl.org/release/SDL2-devel-2.0.22-VC.zip" -OutFile "sdl2.zip"
        Expand-Archive -Path "sdl2.zip" -DestinationPath "."
        Copy-Item -Path "SDL2-2.0.22\include\SDL2" -Destination "$env:GITHUB_WORKSPACE\include" -Recurse
        Copy-Item -Path "SDL2-2.0.22\lib\x64\SDL2.dll" -Destination "$env:GITHUB_WORKSPACE"
    
        # Return to the original directory
        Set-Location $env:GITHUB_WORKSPACE
        
    - name: Configure with CMake
      run: |
        cmake -B build -S .
        
    - name: Build with CMake
      run: |
        cmake --build build

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-build
        path: build

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu-latest-build/build.zip
        asset_name: build-linux.zip
        asset_content_type: application/zip
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-latest-build/build.zip
        asset_name: build-windows.zip
        asset_content_type: application/zip
